version: "1.0.0"
name: stacked-media
services:

  # To use/enable VPN, Run this compose file with --profile=vpn. Use without VPN at your own risk.
  vpn:
    ## Read https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers for details on configuring VPN for your service provider.
    profiles: ["vpn"]
    container_name: vpn
    image: qmcgaw/gluetun:v3.38.0
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-nordvpn} # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom
      - OPENVPN_USER=${OPENVPN_USER:-""}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD:-""}

      ## For list of server countries, visit https://raw.githubusercontent.com/qdm12/gluetun/master/internal/storage/servers.json
      ## When VPN_SERVICE_PROVIDER is custom. Comment the below line
      - SERVER_COUNTRIES=${SERVER_COUNTRIES:-Switzerland}
    
      # - FREE_ONLY=on  # Valid with protonvpn only. Value willbe set "on" if using free subscription provided by protonvpn

      ## Enable below if VPN_SERVICE_PROVIDER=custom
      # - VPN_TYPE=openvpn # or wireguard. 

      ## If VPN_TYPE is openvpn
      # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf

      ## If VPN_TYPE is wireguard. Replace below env variables as required.
      # - VPN_ENDPOINT_IP=1.2.3.4                                               # Replace with your wg endpoint ip or domain
      # - VPN_ENDPOINT_PORT=51820                                               # Replace with wg server port
      # - WIREGUARD_PUBLIC_KEY=wAUaJMhAq3NFutLHIdF8AN0B5WG8RndfQKLPTEDHal0=     # Replace with your wg public key
      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=    # Replace with your wg client private key
      # - WIREGUARD_PRESHARED_KEY=xOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=  # Replaced with your wg pre-shared key
      # - WIREGUARD_ADDRESSES="10.64.222.21/32"                                 # Replace with wg address

    ## Enable volume if VPN_SERVICE_PROVIDER=custom and VPN_TYPE=openvpn is used
    # volumes:
      # - /yourpath/yourconfig.conf:/gluetun/config.conf:ro

    networks:
      - mynetwork
    
    # Comment/disable below ports if VPN is unused/disabled (not recommended)
    ports:
      # qbittorrent ports
      - 5080:5080
      - 6881:6881
      - 6881:6881/udp
      # prowlarr ports
      - 9696:9696
      # flaresolverr ports
      - 9191:9191
    restart: "unless-stopped"


  ## Default credentials of qBittorrent - Username: admin password: adminadmin ##
  ## Change password after install from UI --> Tools --> Options --> WebUI ##
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:4.6.4

    # Comment below if vpn is disabled
     depends_on:
       - vpn

    # Uncomment below lines if VPN is disabled
    #networks:
    #  - mynetwork

    # Comment below line if vpn is disabled
     network_mode: service:vpn

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - WEBUI_PORT=5080
    volumes:
      - qbittorrent-config:/config
      - torrent-downloads:/downloads

    ## Uncomment/enable below ports if VPN is disabled
    #ports:
    #  - 5080:5080
    #  - 6881:6881
    #  - 6881:6881/udp
    restart: "unless-stopped"


  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.6.0
    networks:
    #  - mynetwork   # Uncomment this line if VPN is disabled
    ## Comment below lines if VPN is disabled
       mynetwork:
         ipv4_address: ${RADARR_STATIC_CONTAINER_IP} # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
         
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - 7878:7878
    volumes:
      - radarr-config:/config
      - torrent-downloads:/downloads
    restart: "unless-stopped"


  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:4.0.4
    networks:
    #  - mynetwork   # Uncomment this line if VPN is disabled
    ## Comment below lines if VPN is disabled
       mynetwork:
         ipv4_address: ${SONARR_STATIC_CONTAINER_IP} # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
         
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - sonarr-config:/config
      - torrent-downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped


  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:1.17.2

    # Comment below if vpn is disabled
    depends_on:
       - vpn
    network_mode: service:vpn # Comment this line if vpn is disabled

    #networks:               # Uncomment this line if vpn is disabled
    #  - mynetwork           # Uncomment this line if vpn is disabled
    
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - prowlarr-config:/config

    # Uncomment below ports if VPN is disabled.
    #ports:
    #  - 9696:9696
    restart: unless-stopped
    

  jellyseerr:
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:1.8.1
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jellyseerr-config:/app/config
    ports:
      - 5055:5055
    restart: unless-stopped


  jellyfin:
    container_name: jellyfin
    image: linuxserver/jellyfin:10.9.3
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jellyfin-config:/config
      - torrent-downloads:/data
  # devices:
   #  - /dev/videoN:/dev/videoN # If desired, mount GPU device
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped

    
  # bazarr:
  #   container_name: bazarr
  #   image: lscr.io/linuxserver/bazarr:1.4.2
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=UTC
  #   volumes:
  #     - bazarr-config/config:/config
  #     - torrent-downloads/movies:/movies #optional
  #     - torrent-downloads/tvshows:/tv #optional
  #   ports:
  #     - 6767:6767
  #   restart: unless-stopped


  # Doc: https://github.com/louislam/uptime-kuma
  # uptime-kuma:
  #   container_name: uptime-kuma
  #   image: louislam/uptime-kuma:1.23.13
  #   networks:
  #     - mynetwork
  #   volumes:
  #     - uptime-kuma-config:/config
  #   ports:
  #     - 3001:3001
  #   restart: unless-stopped
    

  # WIP implementation. Optional since not everyone will want/need to use it. 
  # Doc: https://github.com/FlareSolverr/FlareSolverr
  # flaresolverr:
  #   image: flaresolverr/flaresolverr:3.3.18
  #   container_name: flaresolverr
    
  #   # Comment below if vpn is disabled
  #   depends_on:
  #      - vpn
  #   network_mode: service:vpn # Comment this line if vpn is disabled

  #   #networks:               # Uncomment this line if vpn is disabled
  #   #  - mynetwork           # Uncomment this line if vpn is disabled
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=UTC
  #     - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}  # Customize as needed
  #   volumes:
  #     - flaresolverr-config:/config
  
  #   # Uncomment below ports if VPN is disabled.
  #   #ports:
  #   #  - 8191:8191
  #   restart: unless-stopped 


volumes:
  torrent-downloads:
  radarr-config:
  sonarr-config:
  prowlarr-config:
  jellyfin-config:
  qbittorrent-config:
  jellyseerr-config:
  # bazarr-config:
  # uptime-kuma-config:
  # flaresolverr-config:

networks:
  mynetwork:
    external: true
